<!DOCTYPE html>
<html>
<head>
  <title>Visualization</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.96.1/css/materialize.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.css">

  <link rel="stylesheet" href="css/d3.slider.css">

  <!--Let browser know website is mobile optimized-->
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>

  <style type="text/css">

  html, body {
    height: 100%;
  }

  body {
    overflow: hidden;
  }

  #front-header {
    position: absolute; 
    top: 0px; 
    width: 100%; 
    height: 400px
  }

  @media (max-height: 400px) {
    #front-header {
      height: 100%;
    }
  }

  .nav-title {
    color: #f8f8f8;
    padding-left: 25px;
    padding-right: 25px;
    cursor: pointer;
    height: 50px;
    line-height: 50px;  /* vertical alignment */
    display: inline-block;
  }

  #nav-title-1:hover, #nav-title-1.active {background: #ef5350;} /*{border-bottom: 3px solid #ef5350; color: #ef5350;}*/
  #nav-title-2:hover, #nav-title-2.active {background: #00bcd4;} /*{border-bottom: 3px solid #00bcd4; color: #00bcd4;}*/
  #nav-title-3:hover, #nav-title-3.active {background: #8bc34a;} /*{border-bottom: 3px solid #8bc34a; color: #8bc34a;}*/
  #nav-title-4:hover, #nav-title-4.active {background: #ffb300;} /*{border-bottom: 3px solid #ffb300; color: #ffb300;}*/


  .description {
    position: absolute; 
    bottom: 0px; 
    height: 50px; 
    line-height: 50px;  /* vertical alignment */
    width: 100%; 
    z-index: 1; 
    font-size: 0.9em; 
    color: #f8f8f8;
    text-align: center;
    visibility: hidden;
  }

  #content {
    position: relative;
    top: 380px;
    height: calc(100% - 160px);
    margin: 0 auto;
    width: 900px;
  }

  @media (max-width: 900px) {
    #content {
      width: 100%;
    }
  }



  /* time chart */
  #time-chart .c3-line {
    stroke-width: 3px;
    stroke-linecap: round;
    /*stroke-linejoin: round;*/
  }

  /*#time-chart .c3-axis-y {
    display: none;
  }

  #time-chart .c3-axis-y .domain {
    visibility: hidden
  }
  #time-chart .c3-axis-y .tick {
    visibility: hidden
  }*/


  #time-chart .c3-axis-x line {
    visibility: hidden
  }
  #time-chart .c3-axis-x .domain {
    visibility: hidden
  }
  #time-chart .c3-axis-x text {
    fill: #f8f8f8;
  }


  #time-chart .c3-ygrid {
    /*stroke-dasharray: 0;*/
    stroke-width: 1.5px;
  }

  /* bar chart */
  #bar-chart .c3-axis-y .domain {
    visibility: hidden
  }
  #bar-chart .c3-axis-y .tick {
    visibility: hidden
  }

  #bar-chart .c3-axis-x line {
    visibility: hidden
  }
  #bar-chart .c3-axis-x .domain {
    visibility: hidden
  }
  #bar-chart .c3-axis-x text {
    fill: #f8f8f8;
  }

  #bar-chart .c3-text {
    fill: #9e9e9e !important;
  }


  .d3-slider {
    background: #9e9e9e;
    border-style: none;    
    border-radius: 0.125em;
  }

  .d3-slider-vertical {
    width: 0.25em;
  }

  .d3-slider-handle {
    border-radius: 1em;
    background: #f8f8f8;
    border-style: none;
  }

  .d3-slider-handle:hover {
    /*border: 10px solid #bdbdbd;*/
    border-style: none;
  }

  .d3-slider-vertical .d3-slider-handle {
    width: 1.1em;
    height: 1.1em;
    left: -0.45em; 
  }

  .time_point {
    background: #bdbdbd;
    position: absolute;
    width: 0.8em;
    height: 0.8em;
    left: -0.27em;
    border-radius: 1em;
  }
  </style>
  


</head>

<body class="grey darken-1">

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.96.1/js/materialize.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.12/jquery.mousewheel.min.js"></script>

<script src="js/datamaps.none.min.js"></script>
<script src="js/d3.slider.js"></script>

<div id="front-header">

  <div id="navbar-wrapper" class="grey darken-3" style="position: absolute; bottom: 50px; width: 100%; top: 0px">

    <div id="navbar-header" class="center-align" style="padding: 20px; color: #f8f8f8;">
      <h3>Some description</h3>
    </div>

    <!-- TODO: Change this to nav (currently, materialize alters the style of that) -->
    <div id="navbar" style="position: absolute; bottom: 0px; height: 50px; width: 100%; text-align: center">
      <div id="nav-title-1" class="nav-title">Sale Price</div><!--
      --><div id="nav-title-2" class="nav-title">Number of Sales</div><!--
      --><div id="nav-title-3" class="nav-title">Foreclosures</div><!--
      --><div id="nav-title-4" class="nav-title">Sold for Loss</div>
    </div>

  </div>

  <div id="description-1" class="description" style="background-color: rgba(239, 83, 80, 1);">
    Median sale price for all homes sold on Zillow in one month
  </div>
  <div id="description-2" class="description" style="background-color: rgba(0, 188, 212, 1);">
    Number of homes sold on Zillow in one month
  </div>
  <div id="description-3" class="description" style="background-color: rgba(139, 195, 74, 1);">
    Number of homes foreclosed in one month
  </div>
  <div id="description-4" class="description" style="background-color: rgba(255, 179, 0, 1);">
    Percentage of homes sold on Zillow in one month for less than acquired
  </div>

</div>



<div id="content">

  <div id="content-overlay" style="position: absolute; width: 100%; height: 100%; z-index: 1;"></div>

  <div style="position: absolute; width: 100%; height: 100%;">

    <div style="position: absolute; left: 25px; width: 29%; height: 100%">

      <div id="bar-chart-wrapper" style="position: absolute; top: 0px; height: calc(50% - 35px); width: 100%;">
        <div id="bar-chart"></div>
      </div>
      <div id="time-chart-wrapper" style="position: absolute; bottom: 0px; height: calc(50% - 35px); width: 100%;">
        <div id="time-chart"></div>
      </div>

    </div>

    <div id="time-slider-wrapper" style="display: flex; flex-direction: column; visibility: hidden; position: absolute; top: 20px; left: 37.5%; width: 25%; bottom: 20px; text-align: center;">

      <div style="color: #f8f8f8">
        Jan<br>
        <span id="year" style="font-size: 2em;">2005</span><br>
        <i id="time-play-pause" class="mdi-av-play-circle-fill" style="color: #f8f8f8; font-size: 2.7rem; cursor: pointer"></i>
      </div>

      <div style="flex: 1; margin-top: 20px; position: relative">
        <div style="position: absolute; height: 100%; left: 0px; width: calc(50% - 15px)">
          <p class="time-text" style="position: absolute; top: 0%; font-size: 0.75rem; color: #f8f8f8; text-align: right; line-height: 1.3"><span style="font-weight: bold;">Sep 08</span><br>Lehman Brothers files bankruptcy</p>
          <p class="time-text" style="position: absolute; top: 50%; font-size: 0.75rem; color: #9e9e9e; text-align: right; line-height: 1.3"><span style="font-weight: bold;">Sep 08</span><br>Lehman Brothers files bankruptcy</p>
        </div>
        <div id="time-slider" style="cursor: pointer; position: absolute; height: 100%; left: 50%">
          <div id="slider-progress" class="d3-slider d3-slider-vertical" style="position: absolute; top: 0px; left: 0px; height: 0%; width: 100%; background: #f8f8f8"></div>
    <!--       <div class="time_point" style="top: 30%"></div>
          <div class="time_point" style="top: 60%"></div>
     -->
        </div>
        <div style="position: absolute; height: 100%; right: 0px; width: calc(50% - 15px)">
          <p class="time-text" style="position: absolute; top: 25%; font-size: 0.75rem; color: #9e9e9e; text-align: left; line-height: 1.3"><span style="font-weight: bold;">Sep 08</span><br>Lehman Brothers files bankruptcy</p>
          <p class="time-text" style="position: absolute; top: 75%; font-size: 0.75rem; color: #9e9e9e; text-align: left; line-height: 1.3"><span style="font-weight: bold;">Sep 08</span><br>Lehman Brothers files bankruptcy</p>
        </div>
      </div>

    </div>


    <div id="map-wrapper" style="position: absolute; right: 25px; width: 29%; height: 100%">
      <div id="map" style="width: 100%; height: 100%"></div>
    </div>

  </div>

</div>

<div class="center-align grey darken-2 grey-text text-lighten-1" style="position: absolute; bottom: 0px; height: 50px; width: 100%; font-size: 0.9em">
  <p>&copy; Johannes Rieke, Chris Blum, Sindre Magnussen, Petter Astrup, Nemanja Aksic</p>
</div>


<script type="text/javascript">

  function barChartSize() {
    return d3.select('#bar-chart-wrapper').node().getBoundingClientRect();
  }
  function timeChartSize() {
    return d3.select('#time-chart-wrapper').node().getBoundingClientRect();
  }
  function mapSize() {
    return d3.select('#map-wrapper').node().getBoundingClientRect();
  }

  var slidedUp = false;
  var maxSliderValue = 5;
  var scroll_speed = 0.003;
  var startColor = '#9e9e9e';
  var city = 'San Diego';
  var selectedNeighborhood = 'La Jolla';  // TODO: At the beginning, no neighborhood should be selected
  var selectedTimeIndex = 0;



  // if (['#sale-price', '#number-of-sales', '#foreclosures', '#sold-for-loss'].indexOf(parent.location.hash) == -1) {
  //   parent.location.hash = '';
  //   d3.select('#content')
  //     .style('top', '60%');
  //   d3.select('#content-overlay')
  //     .style('top', '60%');
  //   d3.select('#front-header')
  //     .style('top', '0px');
  //   var slidedUp = false;
  // }



  var data = {
    months: ['2005-01-15', '2006-01-15', '2007-01-15', '2008-01-15', '2009-01-15', '2010-01-15']
  };

  var areas = ['Amphitheater And Water Park', 'Bella Lago', 'Bonita Long Canyon', 'East Lake', 'Eastlake Trails', 'Eastlake Vistas', 'Eastlake Woods', 'Estlake Greens', 'Fenton St', 'Golf Course', 'Lynwood Hills', 'Northwest', 'Otay Ranch', 'Paseo Ranchoero', 'Rancho Del Rey', 'Rolling Hills Ranch', 'Southwest', 'Sunbow', 'Terra Nova', 'Thomy Locust Pl', 'Village Center', 'Yosemite Dr', 'Allied Gardens', 'Alta Vista', 'Balboa Park', 'Bario Logan', 'Bay Ho', 'Bay Park', 'Bay Terrace', 'Bird Land', 'Carmel Mountain', 'Carmel Valley', 'Chollas View', 'City Heights East', 'City Heights West', 'Clairemont Mesa', 'College Area', 'Columbia', 'Core', 'Cortez Hill', 'Darnall', 'Del Cerro', 'Del Mar Heights', 'East Village', 'Egger Highlands', 'El Cerritos', 'Emerald Hills', 'Encanto', 'Gaslamp Quarter', 'Gateway', 'Grant Hill', 'Grantville', 'Horton Plaza', 'Jomacha-Lomita', 'Kearny Mesa', 'Kensington', 'La Jolla', 'La Jolla Village', 'Lake Murray', 'Lincoln Park', 'Linda Vista', 'Little Italy', 'Loma Portal', 'Marina', 'Memorial', 'Midtown', 'Midtown District', 'Mira Mesa', 'Miramar', 'Mission Bay', 'Mission Valley', 'Moreno Mission', 'Mount Hope', 'Mountain View', 'Nestor', 'Normal Heights', 'North City', 'North Clairemont', 'North Hills', 'Oak Park', 'Ocean Beach', 'Old Town', 'Pacific Beach', 'Palm City', 'Paradise Hills', 'Park West', 'Rancho Bernadino', 'Rancho Penasquitos', 'Rolando', 'Roseville', 'Sabre Springs', 'San Carlos', 'San Ysidro', 'Scripps Ranch', 'Serra Mesa', 'Sky Line', 'Sorrento Valley', 'South Park', 'Southcrest', 'Talmadge', 'Tierrasanta', 'Tijuana River Valley', 'Torrey Pines', 'University City', 'Valencia Park', 'Webster', 'West University Heights', 'Wooded Area'];

  for (var i = 0; i < areas.length; i++) {
    data[areas[i]] = [Math.random(), Math.random(), Math.random(), Math.random(), Math.random(), Math.random()];
  }

  var neighborhoodsForBarChart = ['La Jolla', 'Pacific Beach', 'Old Town', 'Balboa Park', 'Ocean Beach', 'Mission Bay'];

  function time(index) {
    if (index != selectedTimeIndex) {
      bar_chart.load({
        json: {
          values: neighborhoodsForBarChart.map(function(neighborhood) { return data[neighborhood][index]; })
        }
      });
      var map_values = {};
      for (var area in data) {
        // datamaps cannot deal with spaces in the keys, so we remove them
        map_values[area.split(' ').join('')] = colorScale(data[area][index]);
      }
      // 'map_values' also contains the 'months' field, but that is simply ignored by datamaps
      map.updateChoropleth(map_values);
      selectedTimeIndex = index;
    }
  } 

  function neighborhood(name) {
    if (name != selectedNeighborhood) {
      time_chart.data.names({
        neighborhood: name
      });
      time_chart.load({
        json: {
          neighborhood: data[name]
        }
      });

      selectedNeighborhood = name;
    }
  }


  var slider;

  function updateYear(sliderValue, animate) {
    // console.log(sliderValue);
    // console.log(Math.round(2005+(maxSliderValue - sliderValue)));
    // console.log(((maxSliderValue-sliderValue)/maxSliderValue*100 + '%'));
    var percent = (maxSliderValue - sliderValue) / maxSliderValue * 100;

    d3.select('#year')
      .text(Math.round(2005+(maxSliderValue - sliderValue)));  // TODO: Change this once we have actual months for the slider values
    d3.select('#slider-progress')  // TODO: Maybe integrate this in d3.slider directly or send them a pull request
      // .transition()
      // .styleTween(position, function() { return d3.interpolate(oldPos, newPos); })
      // .duration(animate ? 250 : 0)
      .style('height', percent + '%');

    // TODO: Allow user to click on timeline texts
    var pos = parseFloat(d3.select('#slider-progress').style('height'));
    d3.selectAll('.time-text')
      .each(function() {
        var element = d3.select(this);
        var top = parseFloat(element.style('top'));
        var bottom = top + parseFloat(element.style('height'));
        // console.log(top + " - " + bottom);
        element.style('color', (pos >= top && pos <= bottom) ? '#f8f8f8' : '#9e9e9e');
      });

    time(Math.round(sliderValue));
  }

  d3.select('#time-slider').call(
    slider = d3.slider()
      .orientation("vertical")
      .min(0)
      .max(maxSliderValue)
      .value(maxSliderValue)
      .on('slide', function(evt, value) {
        updateYear(value, false);
      }));

  var playing = false;

  d3.select('#time-play-pause')
    .on('click', function() {
      playing = !playing;
      d3.select('#time-play-pause')
        .classed('mdi-av-play-circle-fill', !playing)
        .classed('mdi-av-pause-circle-fill', playing);

      // slider.value(50);
      function playTime() {
        if (playing) {
          var new_value = Math.max(0, Math.round(slider.value()) - 1);
          slider.value(new_value);
          updateYear(new_value, true);
          // console.log(slider.value());

          if (new_value == 0) {
            playing = false;
            d3.select('#time-play-pause')
              .classed('mdi-av-play-circle-fill', !playing)
              .classed('mdi-av-pause-circle-fill', playing);
          }
          // console.log(this);
          window.setTimeout(playTime, 1000);
        }
      }

      if (playing) {
        playTime();
      }

    });



</script>

<script type="text/javascript">
  
  var bar_chart = c3.generate({
    bindto: '#bar-chart',
    size: barChartSize(),
    data: {
      x: 'neighborhoods',
      json: {
        neighborhoods: [' ', ' ', ' ', ' ', ' ', ' '],
        values: [0.3, 0.7, 1, 0.3, 0.15, 0.4]
      },  // real data is loaded in 'updateDataSet'
      colors: {
        values: startColor
      },
      type: 'bar'
      // TODO: If labels are shown, there is a slight space between the bars and the neighborhood names
      // labels: {
      //   format: d3.format('.3s')
      // }
    },
    legend: {show: false},
    bar: {
      width: {
          ratio: 0.5 // this makes bar width 50% of length between ticks
      }
    },
    axis: {
      x: {
        type: 'category'  // needed to show string labels
      },
      y: {
        show: false,
        min: 0,
        max: 1
      }
    }
    // tooltip: {show: false}
});


</script>

<script type="text/javascript">
  var time_chart = c3.generate({
    bindto: '#time-chart',
    size: timeChartSize(), 
    data: {
      x: 'years',
      json: {
        years: data['months'],//[2005, 2006, 2007, 2008, 2009, 2010],
        average: [1, 1, 1, 1, 1, 1], 
        neighborhood: [1, 1, 1, 1, 1, 1]
      },  // real data is loaded in 'updateDataSet'
      colors: {
        average: startColor,
        neighborhood: startColor
      }
      // labels: {
      //   format: function (v, id, i, j) { 
      //     if (i == 4)
      //       return id; 
      //   }
      // }
    },
    padding: {
      left: 10,
      right: 10
    },    
    point: {show: false},
    legend: {show: false},
    grid: {y: {
      show: true
      // lines: [{value: 0}]
    }},
    axis: {
      x: {
        type: 'timeseries',
        tick: {
          format: '%Y',
          values: ['2005-07-02', '2006-07-02', '2007-07-02', '2008-07-02', '2009-07-02']  // 07-02 is the middle day of the year
        }
      },
      y: {
        show: false,
        min: 0, 
        max: 1,  // TODO: Adapt this to the max value of all data
        padding: {bottom: 0}, 
        tick: {
          count: 4
        }
      }
    }
    // tooltip: {show: false}
  });

</script>

<script type="text/javascript">

  function updateDataSet(map_color, chart_color) {
    // TODO: Make visualizations grey while data is loading, maybe even by using a small transition

    d3.select('#content-overlay')
      .style('visibility', 'visible');

    colorScale.range(['#f8f8f8', map_color]);
    var map_values = {};
    for (var area in data) {
      // datamaps cannot deal with spaces in the keys, so we remove them
      map_values[area.split(' ').join('')] = colorScale(data[area][selectedTimeIndex]);
    }
    // 'map_values' also contains the 'months' field, but that is simply ignored by datamaps
    map.updateChoropleth(map_values);


  
    bar_chart.data.colors({
      values: chart_color
    });
    bar_chart.load({
      json: {
        neighborhoods: neighborhoodsForBarChart,
        values: neighborhoodsForBarChart.map(function(neighborhood) { return data[neighborhood][selectedTimeIndex]; })
      }
    });

    // console.log(bar_chart.data);

    time_chart.data.colors({
      average: '#f8f8f8',  // TODO: This only needs to load at the first start
      neighborhood: chart_color
    });
    time_chart.data.names({
      neighborhood: selectedNeighborhood,
      average: 'Average'
    });
    time_chart.load({
      json: {
        // ['years', 2005, 2006, 2007, 2008],
        average: [0.50, 0.70, 0.8, 0.30, 0.1, 0.60], 
        neighborhood: data[selectedNeighborhood]
      }
    });



    // TODO: Do this a little bit more elegant than just making it visible at once
    d3.select('#time-slider-wrapper')
      .style('visibility', 'visible');

    $(document).on('mousewheel', function(evt) {
      var new_value = Math.max(0, Math.min(maxSliderValue, slider.value() - scroll_speed * event.deltaY));
      slider.value(new_value);
      updateYear(new_value, false);
    });

    d3.select('#content-overlay')
      .style('visibility', 'hidden');

    // TODO: Anyhow, the line chart becomes smaller when loading data
    // if resized directly, it goes back to its original size, but the line is shorter
    // After further tests, this only seems to appear when the maximum y value is different than before
    // (then, the chart has to rescale apparently). Fixed this in the prototype by just keeping the max value for 300
    // window.setTimeout(function() {
    //   time_chart.resize();
    // }, 500);

    
  }

  // var active = 1;

  function slideUp() {
    if (!slidedUp) {
      d3.select('#front-header')
        .transition()
        .duration(1000)
        .style('top', '-300px');

      d3.select('#content')
        .transition()
        .duration(1000)
        .style('top', '80px');

      slidedUp = true;
    }
  }
  
  var selectedTitle = -1;
  var colors = [['#f44336', '#ef5350'], ['#00bcd4', '#00bcd4'], ['#8bc34a', '#8bc34a'], ['#ffb300', '#ffb300']];
  d3.selectAll('.nav-title')
    .on('mouseover', function(d, i) {
      d3.select(d3.selectAll('.description')[0][i]).style('visibility', 'visible');
      d3.selectAll('.nav-title').classed('active', false);
    })
    .on('mouseout', function() {
      d3.selectAll('.description').style('visibility', 'hidden');
        d3.select(d3.selectAll('.nav-title')[0][selectedTitle]).classed('active', 'true');
    })
    .on('click', function(d, i) {
      slideUp();
      updateDataSet(colors[i][0], colors[i][1]);
      d3.selectAll('.nav-title').classed('active', false);
      d3.select(this).classed('active', true);
      selectedTitle = i;
    });

</script>

<script>
  var colorScale = d3.scale.linear()
    .domain([0, 1]);
    // range will be added during 'updateDataSet'

  
  var map = new Datamap({
    element: document.getElementById('map'),
    responsive: true,
    geographyConfig: {
      dataUrl: 'data/SanDiego.json',
      borderColor: '#757575', 
      borderWidth: 0.7,  // 0
      highlightFillColor: 'foo',  // just some random string to keep fill color the same
      highlightBorderColor: 'black',
      highlightBorderWidth: 2,
      popupTemplate: function(geography, data) {
        neighborhood(geography.properties.NAME);
        return '<div class="hoverinfo"><strong>' + geography.properties.NAME + '</strong></div>';
      }
    },
    scope: 'SanDiego',
    fills: {
      defaultFill: startColor
    }, 
    setProjection: function(element, options) {
      var width = options.width || element.offsetWidth;
      var height = options.height || element.offsetHeight;

      // var size = mapSize();
      var projection = d3.geo.mercator()
    		.center([-117.1063889, 32.8152778])
    		.scale(38000)
        .translate([width / 2, height / 2]);
		
       var path = d3.geo.path().projection(projection);
       return {path: path, projection: projection};
    },
    done: function(datamap) {
      // TODO: Maybe call updateChoropleth for the first time here

      datamap.svg.selectAll('.datamaps-subunit').on('click', function(geography) {
      //   neighborhood(geography.properties.NAME);

      });
    }
  });



  window.addEventListener('resize', function() {
    bar_chart.resize(barChartSize());
    time_chart.resize(timeChartSize());
    // map.resize();
    map.resize(mapSize());
  });


</script>

</body>
</html>